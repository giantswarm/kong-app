apiVersion: v1
kind: Namespace
metadata:
  name: helloworld
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: helloworld
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: helloworld
    spec:
      containers:
      - image: quay.io/giantswarm/helloworld:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        name: helloworld
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  type: ClusterIP
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: helloworld
---
apiVersion: v1
kind: Secret
metadata:
  name: helloworld-acl-creds
  namespace: helloworld
stringData:
  kongCredType: acl
  group: acl-group
---
apiVersion: v1
kind: Secret
metadata:
  name: helloworld-basic-auth-creds
  namespace: helloworld
stringData:
  kongCredType: basic-auth
  username: basic-auth-user
  password: basic-auth-password
  group: acl-group
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: acl-consumer
  namespace: helloworld
  annotations:
    kubernetes.io/ingress.class: kong
username: allowed-testing-user
credentials:
- helloworld-acl-creds
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: basic-auth-consumer
  namespace: helloworld
  annotations:
    kubernetes.io/ingress.class: kong
username: basic-auth-user
credentials:
- helloworld-basic-auth-creds
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: acl
  namespace: helloworld
plugin: acl
config:
  # hide_groups_header: true
  allow:
  - basic-auth-user
  - acl
  - acl-consumer
  - acl-group
  - basic-auth-consumer
  - allowed-testing-user
  - basic-auth
  - kong
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: basic-auth
  namespace: helloworld
plugin: basic-auth
# config:
#   hide_credentials: true
---
apiVersion: configuration.konghq.com/v1
config:
  methods:
  - GET
  origins:
  - '*'
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: helloworld-cors
  namespace: helloworld
plugin: cors
---
apiVersion: configuration.konghq.com/v1
config:
  path: /dev/stdout
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: log-to-stdout
  namespace: helloworld
plugin: file-log
---
apiVersion: configuration.konghq.com/v1
config:
  allow:
  - 10.0.0.1/8
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: ip-restrict-to-ten
  namespace: helloworld
plugin: ip-restriction
---
apiVersion: configuration.konghq.com/v1
config:
  hide_client_headers: true
  hour: 10000000
  policy: local
  second: 6000
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: local-rate-limiting
  namespace: helloworld
plugin: rate-limiting
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: limit-request-size
  namespace: helloworld
config:
  allowed_payload_size: 128
  size_unit: bytes
  require_content_length: false
plugin: request-size-limiting
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: correlate-id
config:
  header_name: Kong-Request-ID
  generator: uuid#counter
  echo_downstream: false
plugin: correlation-id
---
apiVersion: configuration.konghq.com/v1
config:
  replace:
    uri: /blacklist-report/
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: transform-requests
  namespace: helloworld
plugin: request-transformer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    konghq.com/plugins: global-prometheus, global-response-headers, kongproxycache, basic-auth, helloworld-cors, log-to-stdout, ip-restrict-to-ten, local-rate-limiting, limit-request-size, correlate-id, transform-requests #, acl
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  ingressClassName: kong
  rules:
  - host: helloworld
    http:
      paths:
      - backend:
          service:
            name: helloworld
            port:
              number: 8080
        path: /
        pathType: Prefix
---
apiVersion: configuration.konghq.com/v1
config:
  key_names:
  - test-api-key
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: key-auth-plugin
  namespace: helloworld
plugin: key-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: helloworld-key-auth-creds
  namespace: helloworld
stringData:
  kongCredType: key-auth
  key: 123-secret-api-key
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: key-auth-consumer
  namespace: helloworld
  annotations:
    kubernetes.io/ingress.class: kong
username: key-auth-user
credentials:
- helloworld-key-auth-creds
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    konghq.com/plugins: global-prometheus, global-response-headers, kongproxycache, key-auth-plugin, helloworld-cors
  labels:
    app: helloworld
  name: helloworld-keyauth
  namespace: helloworld
spec:
  ingressClassName: kong
  rules:
  - host: helloworld-keyauth
    http:
      paths:
      - backend:
          service:
            name: helloworld
            port:
              number: 8080
        path: /
        pathType: Prefix
