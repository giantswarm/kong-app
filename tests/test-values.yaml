proxy:
  type: NodePort
  http:
    nodePort: 32080

env:
  anonymous_reports: "off"
  headers: "off"
  nginx_http_log_format: json_log escape=json '{"message":{"remote_addr":"$remote_addr","remote_user":"$remote_user","host":"$http_host","request":"$request","req_method":"$request_method","req_time":"$request_time","status":"$status","size":"$body_bytes_sent","user_agent":"$http_user_agent","cookie":"$http_cookie","uri":"$uri","http_referer":"$http_referer","upstream_status":"$upstream_status","upstream_addr":"$upstream_addr","upstream_connect_time":"$upstream_connect_time","upstream_header_time":"$upstream_header_time","upstream_response_time":"$upstream_response_time","x-api-key":"$http_x_api_key","api-key":"$http_api_key","x-forwarded-for":"$http_x_forwarded_for","true-client-ip":"$http_true_client_ip","upstream_cache_status":"$upstream_cache_status"},"@timestamp":"$time_iso8601","labels":{"env":"stg"},"service":{"name":"Kong"},"level":"info"}'
  nginx_http_lua_shared_dict: kong_proxy_cache 5m
  nginx_worker_processes: "1"
  database: postgres
  proxy-connect-timeout: "10"
  proxy-read-timeout: "10"
  proxy-write-timeout: "10"
  proxy_next_upstream: "off"
  proxy_next_upstream_tries: "1"

image:
  repository: giantswarm/kong
  tag: "3.8.0"

enterprise:
  enabled: false
ingressController:
  ingressClass: kong
  admissionWebhook:
    enabled: true
  env:
    anonymous_reports: "false"
  installCRDs: false

admin:
  enabled: true

podDisruptionBudget:
  enabled: true
  maxUnavailable: 50%

postgresql:
  enabled: true
  auth:
    username: kong
    database: kong
    password: kong
  primary:
    persistence:
      enabled: false
